# Custom config
app:
  mongodb:
    host: localhost
    port: 27017
    user: user
    password: pass
    database: catalog-query-db
  postgres:
    host: localhost
    port: 5432
    database: catalogdb
    user: catalogdbuser
    password: dbpass

spring:
  application:
    name: catalog-query
  data:
    # Mongo
    mongodb:
      host: ${app.mongodb.host}
      port: ${app.mongodb.port}
      username: ${app.mongodb.user}
      password: ${app.mongodb.password}
      database: ${app.mongodb.database}
      authentication-database: admin
  # JPA
  jpa:
    hibernate:
      ddl-auto: validate
  # Postgres
  datasource:
    url: jdbc:postgresql://${app.postgres.host}:${app.postgres.port}/${app.postgres.database}
    username: ${app.postgres.user}
    password: ${app.postgres.password}
    driver-class-name: org.postgresql.Driver

axon:
  serializer:
    general: jackson
    events: jackson
    messages: jackson
  axonserver:
    enabled: false
  kafka:
    clientid: catalog-query-app
    consumer:
      bootstrap-servers: ${app.kafka.broker.host}:${app.kafka.broker.port}
      event-processor-mode: tracking
      auto-offset-reset: earliest
      properties:
        isolation.level: read_committed
    properties:
      security.protocol: PLAINTEXT

# Metrics
management:
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server:
          requests: true
      slo:
        http:
          server:
            requests: 50ms, 100ms, 200ms, 400ms
      percentiles:
        http:
          server:
            requests: 0.5, 0.9, 0.95, 0.99, 0.999

---
ï»¿spring:
  profiles: default
eureka:
  instance:
    # enable to register multiple app instances with a random server port
    instance-id: ${spring.application.name}:${random.uuid}

# Docker profile
---
spring:
  config:
    activate:
      on-profile: docker

app:
  postgres:
    host: postgres
    user: ${POSTGRES_USER}
    password: '{cipher}AQAJNyULQNNKatK+ha3nMYeDC6OgAdSmbI4uS5YiznUsZ2/u2mejSrOGQNUMJLh0m9ZNZe1z5mAYZREu7nDer7aY14zU/zKrKwPuH/i3eZBBRVKw5TEX6Ed9omzzRlyytjUdGb+2OgfufkSM80tODlUCUoHr9klmobpfSlg3u97TNImRWDx1FbR8WJYJfb8abvROmKIjOW6drJqZlpaRfelG8xYFhQ4HPVAfo/rQYPPKLshQPQndWJ4/Jr2yMFo4tlchAtS+9C6kMjWoIk7JKO4nudks1iBZA6RznoYpR3PqU1axNqH4pDxfFSypMR7ck5PF+knf6aaxT6Fc4mASMvsRyb3axN5utkH0NGMsHJlfjznKpE8bOxwQEk9w9SNfijI='
  mongodb:
    host: mongo
    user: ${MONGO_USER}
    password: ${MONGO_PASSWORD} # TODO use cipher

eureka:
  instance:
    metadataMap:
      prometheus.scrape: "true"
      prometheus.path: "/actuator/prometheus"
